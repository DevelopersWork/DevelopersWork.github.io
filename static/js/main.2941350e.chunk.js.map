{"version":3,"sources":["images/placeholder.png","images/brandingDesign.webp","components/header/presentation.js","components/header/index.js","components/header/container.js","Routes.js","images/pattern.webp","images/placeholder.svg","App.js","serviceWorker.js","index.js"],"names":["a11yProps","index","id","Presentation","props","state","value","handleChange","event","newValue","setState","console","log","classes","this","Tabs","className","onChange","indicatorColor","centered","TabIndicatorProps","style","background","Tab","label","component","Link","to","React","Component","withStyles","theme","fontFamily","textTransform","fontSize","fontWeight","color","letterSpacing","overflow","padding","margin","boxShadow","AppBar","textDecoration","Container","Home","lazy","Livestream","Schedule","About","Videos","Routes","fallback","exact","path","App","setValueCallback","tab","renderJSX","jsx","root","maxWidth","Card","once","placeholder","alt","CardMedia","image","_placeholder","title","CardContent","Container_","CardActions","align","bg","componentDidMount","LinearProgress","flexGrow","backgroundImage","backgroundPattern","paddingBottom","objectFit","objectPosition","height","display","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2941350e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placeholder.6591e36b.png\";","export default __webpack_public_path__ + \"static/media/brandingDesign.0c29d3e6.webp\";","import React from 'react'\r\nimport './style.css';\r\n\r\nimport { Container, Menu, MenuItem, MenuList, AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  // AppBar,\r\n  // Toolbar,\r\n  CssBaseline,\r\n  // Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image from '../../images/brandingDesign.webp';\r\nimport placeholder from '../../images/placeholder.png';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nclass Presentation extends React.Component {\r\n  state = {\r\n    value: 0,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: 0,\r\n    }\r\n    console.log(this.state)\r\n  }\r\n  handleChange = (event, newValue) => {\r\n    // this.props.setValueCallback(newValue)\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        {/* <AppBar position=\"static\" color=\"default\" className={classes.AppBar}> */}\r\n          <Tabs\r\n            className={classes.Tabs}\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n            TabIndicatorProps={{style: {background:'TEAL'}}}\r\n          >\r\n            <Tab label=\"Home\" className={classes.Tab} {...a11yProps(0)} component={Link} to=\"/\" />\r\n            <Tab label=\"livestream\" className={classes.Tab} {...a11yProps(1)} component={Link} to=\"/livestream\" />\r\n            <Tab label=\"Videos\" className={classes.Tab} {...a11yProps(2)} component={Link} to=\"/Videos\" />\r\n            <Tab label=\"schedule\" className={classes.Tab} {...a11yProps(3)} component={Link} to=\"/schedule\" />\r\n            <Tab label=\"about\" className={classes.Tab} {...a11yProps(4)} component={Link} to=\"/about\" />\r\n              \r\n            \r\n            \r\n          </Tabs>\r\n        {/* </AppBar> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  Tab: {\r\n    fontFamily: '!Marvel, ui-monospace',\r\n    textTransform: 'uppercase',\r\n    fontSize: '2em',\r\n    fontWeight: 300,\r\n    \"&:hover\": {\r\n      color: \"teal\",\r\n      fontSize: '2.2em',\r\n      fontWeight: 900,\r\n      letterSpacing: '0.3em',\r\n      overflow: \"hidden\",\r\n    },\r\n    letterSpacing: '0.13em',\r\n    padding: '0.3em 8%'\r\n  },\r\n  Tabs:{\r\n    fontFamily: 'Marvel, ui-monospace',\r\n    margin: 0,\r\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 25%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)'\r\n  },\r\n  AppBar: {\r\n    // border : \"2px solid teal\",\r\n    // backgroundColor: \"#002c52\",\r\n    margin: 0\r\n  },\r\n  Link:{\r\n    color: \"black\",\r\n    textDecoration: 'none'\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(Presentation);","import Container from './container'\r\n\r\nexport default Container","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    render(){\r\n        return (\r\n            <Presentation\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React, { Suspense, lazy } from 'react';\r\nimport {\r\n    Route,\r\n    Link,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nconst Home = lazy(() => import('./views/home'));\r\nconst Livestream = lazy(() => import('./views/livestream'));\r\nconst Schedule = lazy(() => import('./views/schedule'));\r\nconst About = lazy(() => import('./views/about'));\r\nconst Videos = lazy(() => import('./views/videos')); \r\n\r\nclass Routes extends React.Component{\r\n    render(){\r\n        return (\r\n            <>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <Switch>\r\n        \r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/livestream\" component={Livestream} />\r\n                    <Route exact path=\"/videos\" component={Videos} />\r\n                    <Route exact path=\"/schedule\" component={Schedule} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n        \r\n                </Switch>\r\n            </Suspense>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;","export default __webpack_public_path__ + \"static/media/pattern.89a699cc.webp\";","export default __webpack_public_path__ + \"static/media/placeholder.80f51cba.svg\";","import React, { Suspense, lazy } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { Container } from '@material-ui/core';\r\nimport { Card, CardMedia, CardContent, CardActions } from '@material-ui/core';\r\nimport {\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport Header from './components/header';\r\n\r\nimport Routes from './Routes';\r\n\r\nimport backgroundPattern from './images/pattern.webp';\r\nimport _placeholder from './images/placeholder.png';\r\nimport placeholder from './images/placeholder.svg';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundImage: `url(${backgroundPattern})`,\r\n    padding: '3% 0',\r\n    paddingBottom: '6%'\r\n  },\r\n  CardMedia: {\r\n    // paddingTop: '56.25%', // 16:9\r\n    objectFit: 'cover',\r\n    objectPosition: 'center',\r\n    height: '200px',\r\n    // width: '200px'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  CardActions:{\r\n    display: 'block',\r\n    marginTop: '24px'\r\n  },\r\n  Container_:{\r\n    marginTop: 20\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const classes = {}//useStyles();\r\n    this.state = {\r\n      tab: 0,\r\n      jsx: (\r\n        <div className={classes.root}>\r\n          <LinearProgress />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  setValueCallback = (value) => {\r\n    this.setState({\r\n      tab : value\r\n    })\r\n  }\r\n\r\n  renderJSX = () => {\r\n    const { classes } = this.props;\r\n    this.setState({\r\n      jsx: (\r\n        <>\r\n          <div className={classes.root}>\r\n            <Container maxWidth=\"lg\" className={classes.Container}>\r\n              <Card>\r\n\r\n                {/* Header Image*/}\r\n                <LazyLoad once={true} placeholder={placeholder} alt=\"...\">\r\n                  <CardMedia\r\n                    className={classes.CardMedia}\r\n                    image={_placeholder}\r\n                    title=\"\"\r\n                  />\r\n                </LazyLoad>\r\n\r\n                <CardContent className={classes.CardContent}>\r\n                  {/* Header */}\r\n                  <Header value={this.state.tab} setValueCallback={this.setValueCallback} />\r\n                  \r\n                  <Container maxWidth=\"lg\" className={classes.Container_}>\r\n                    <Routes/>\r\n                  </Container>\r\n\r\n                </CardContent>\r\n\r\n                {/* Footer */}\r\n                <CardActions align=\"center\" className={classes.CardActions} bg=\"black\">\r\n                  <h1 style={{ fontFamily: 'Marvel, ui-monospace' }}>\r\n                    <div style={{ color: \"cyan\", fontFamily: 'Bangers, cursive',letterSpacing: '0.15em', fontSize: '1.2em' }}>\r\n                    UNDER CONSTRUCTION\r\n                    </div>\r\n                    WE ARE STILL THINKING HOW IT SHOULD BE!!! SO IT'S ON THE WAY...\r\n                  </h1>\r\n                </CardActions>\r\n              </Card>\r\n            \r\n            </Container>\r\n          </div>\r\n        </>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {    \r\n    this.renderJSX()\r\n    return ''\r\n  }\r\n\r\n  render() {\r\n    return this.state.jsx;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}