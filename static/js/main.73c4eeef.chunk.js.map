{"version":3,"sources":["components/livestream/presentation.js","components/livestream/index.js","components/livestream/container.js","views/livestream/presentation.js","views/livestream/index.js","views/livestream/container.js","App.js","serviceWorker.js","index.js"],"names":["Presentation","classes","this","props","maxWidth","height","Grid","container","spacing","item","xs","FormControl","variant","className","formControl","InputLabel","id","Select","labelId","name","value","platform","onChange","update","label","MenuItem","disabled","md","player","chat","React","Component","withStyles","theme","root","flexGrow","paper","padding","textAlign","Container","state","youtube","twitch","mixer","facebook","width","type","url","getChat","src","style","backgroundColor","getPlayer","getYouTubePlayer","getTwitchPlayer","frameborder","allow","allowfullscreen","scrolling","e","target","setState","App","align","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.73c4eeef.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\nimport {Container} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nclass Presentation extends React.Component{\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <>\r\n                <Container maxWidth=\"lg\" height=\"100%\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Platform</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    name=\"platform\"\r\n                                    value={this.props.platform}\r\n                                    onChange={this.props.update}\r\n                                    label=\"Platform\"\r\n                                >\r\n                                    <MenuItem value=\"youtube\">YouTube</MenuItem>\r\n                                    <MenuItem disabled>--- Coming Soon ---</MenuItem>\r\n                                    <MenuItem value=\"twitch\" disabled>Twitch</MenuItem>\r\n                                    <MenuItem value=\"facebook\" disabled>Facebook Gaming</MenuItem>\r\n                                    <MenuItem value=\"mixer\" disabled>Mixer</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item md={8} xs={12}>\r\n                            {/* <Paper className={classes.paper}> */}\r\n                                {this.props.player()}\r\n                            {/* </Paper> */}\r\n                        </Grid>\r\n                        \r\n                        <Grid item md={4} xs={12}>\r\n                            {/* <Paper className={classes.paper}> */}\r\n                                {this.props.chat()}\r\n                            {/* </Paper> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n                </Container>    \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root : {\r\n        flexGrow : 1\r\n    },\r\n    paper : {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Presentation)","import Container from './container'\r\n\r\nexport default Container","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    state = {\r\n        youtube : \"UCNLm0XtW8zWuzmhD5BqXagw\",\r\n        twitch : \"developerswork\",\r\n        mixer : \"\",\r\n        facebook : \"\",\r\n        player : {\r\n            height : \"60vh\",\r\n            width : \"100%\",\r\n            type : \"youtube\"\r\n        },\r\n        chat : {\r\n            height : \"60vh\",\r\n            width : \"80%\",\r\n            url : 'https://chat.restream.io/embed?token=bd031f04-e345-4529-ac76-6d73ec823c9a'\r\n        }\r\n    }\r\n\r\n    getChat = () => {\r\n        return(\r\n            <iframe\r\n                src={this.state.chat.url}\r\n                width={this.state.chat.width}\r\n                style={{height:this.state.chat.height,backgroundColor:\"black\"}}\r\n            >\r\n            </iframe>\r\n        )\r\n    }\r\n\r\n    getPlayer = () => {\r\n        switch(this.state.player.type){\r\n            case \"youtube\":\r\n                return this.getYouTubePlayer()\r\n            case \"twitch\":\r\n                return this.getTwitchPlayer()\r\n        }\r\n    }\r\n\r\n    getYouTubePlayer = () => {\r\n        return (\r\n            <iframe \r\n                width={this.state.player.width}\r\n                style={{height:this.state.player.height}}\r\n                src={\"https://www.youtube.com/embed/live_stream?channel=\" + this.state.youtube} \r\n                frameborder=\"0\" \r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                allowfullscreen>\r\n            </iframe>\r\n        )\r\n    }\r\n\r\n    getTwitchPlayer = () => {\r\n        return (\r\n            <iframe\r\n                src={\"https://player.twitch.tv/?channel=\" + this.state.twitch + \"&parent=streamernews.example.com\"}\r\n                width={this.state.player.width} \r\n                height={this.state.player.height}\r\n                frameborder=\"0\"\r\n                scrolling=\"no\"\r\n                allowfullscreen=\"true\">\r\n            </iframe>\r\n        )\r\n    }\r\n\r\n    update = e => {\r\n        switch(e.target.name){\r\n            case \"platform\":\r\n                this.setState({\r\n                    player : {\r\n                        ...this.state.player,\r\n                        type : e.target.value\r\n                    }\r\n                });\r\n                break\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Presentation\r\n                update={this.update}\r\n                player={this.getPlayer}\r\n                chat={this.getChat}\r\n                platform={this.state.player.type}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport Livestream from '../../components/livestream'\r\n\r\nclass Presentation extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <Livestream/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Presentation;","import Container from './container'\r\n\r\nexport default Container","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Presentation/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React from 'react';\nimport {Container} from '@material-ui/core';\nimport LiveStream from './views/livestream'\n\nfunction App() {\n  return (\n    <>\n      <Container maxWidth=\"lg\">\n        <LiveStream/>\n\n        <h1 align=\"center\">\n          <div style={{color:\"cyan\"}}>\n            ABOUT WEBSITE\n          </div>\n          WE ARE STILL THINKGIN HOW IT SHOULD BE!!! SO IT'S ON THE WAY...\n        </h1>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}