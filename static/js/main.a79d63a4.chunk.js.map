{"version":3,"sources":["images/placeholder.png","images/brandingDesign.webp","components/header/presentation.js","components/header/index.js","components/header/container.js","Routes.js","images/pattern.webp","images/placeholder.svg","App.js","serviceWorker.js","index.js"],"names":["a11yProps","index","id","Presentation","props","state","value","handleChange","event","newValue","setValueCallback","classes","this","AppBar","position","color","className","Tabs","onChange","indicatorColor","centered","to","Link","Tab","label","React","Component","withStyles","theme","fontFamily","textTransform","fontSize","fontWeight","letterSpacing","padding","margin","boxShadow","textDecoration","Container","Home","lazy","Routes","fallback","exact","path","component","App","setState","tab","renderJSX","jsx","root","maxWidth","Card","once","placeholder","alt","CardMedia","image","_placeholder","title","CardContent","CardActions","align","bg","style","componentDidMount","LinearProgress","flexGrow","backgroundImage","backgroundPattern","paddingBottom","objectFit","objectPosition","height","display","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a79d63a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/placeholder.6591e36b.png\";","export default __webpack_public_path__ + \"static/media/brandingDesign.0c29d3e6.webp\";","import React from 'react'\r\nimport './style.css';\r\n\r\nimport { Container, Menu, MenuItem, MenuList, AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  // AppBar,\r\n  // Toolbar,\r\n  CssBaseline,\r\n  // Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image from '../../images/brandingDesign.webp';\r\nimport placeholder from '../../images/placeholder.png';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nclass Presentation extends React.Component {\r\n  state = {\r\n    value: 0\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ...this.state,\r\n      value: this.props.value\r\n    }\r\n  }\r\n  handleChange = (event, newValue) => {\r\n    this.props.setValueCallback(newValue)\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\" color=\"default\" className={classes.AppBar}>\r\n          <Tabs\r\n            className={classes.Tabs}\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Link to=\"/\" className={classes.Link} ><Tab label=\"Home\" className={classes.Tab} {...a11yProps(0)} /></Link>\r\n            <Link to=\"/library\" className={classes.Link} ><Tab label=\"Videos\" className={classes.Tab} {...a11yProps(1)} /></Link>\r\n            <Tab label=\"Schedule\" className={classes.Tab} {...a11yProps(2)} />\r\n            <Tab label=\"About\" className={classes.Tab} {...a11yProps(3)} />\r\n          </Tabs>\r\n        </AppBar>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  Tab: {\r\n    fontFamily: '!Marvel, ui-monospace',\r\n    textTransform: 'uppercase',\r\n    fontSize: '2em',\r\n    fontWeight: 600,\r\n    \"&:hover\": {\r\n      color: \"cyan\",\r\n      fontSize: '2.8em',\r\n      fontWeight: 900,\r\n      letterSpacing: '0.3em',\r\n    },\r\n    letterSpacing: '0.15em',\r\n    padding: '0.3em 5%'\r\n  },\r\n  Tabs:{\r\n    fontFamily: 'Marvel, ui-monospace',\r\n    margin: 0,\r\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)'\r\n  },\r\n  AppBar: {\r\n    // border : \"10px solid #002c52\",\r\n    // backgroundColor: \"#002c52\",\r\n    margin: 0\r\n  },\r\n  Link:{\r\n    color: \"black\",\r\n    textDecoration: 'none'\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(Presentation);","import Container from './container'\r\n\r\nexport default Container","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    render(){\r\n        return (\r\n            <Presentation\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React, { Suspense, lazy } from 'react';\nimport {\n    Route,\n    Link,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nconst Home = lazy(() => import('./views/home'));\n\nclass Routes extends React.Component{\n    render(){\n        return (\n            <>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n        \n                    <Route exact path=\"/\" component={Home} />\n        \n                </Switch>\n            </Suspense>\n            </>\n        );\n    }\n}\n\nexport default Routes;","export default __webpack_public_path__ + \"static/media/pattern.89a699cc.webp\";","export default __webpack_public_path__ + \"static/media/placeholder.80f51cba.svg\";","import React, { Suspense, lazy } from 'react';\nimport LazyLoad from 'react-lazyload';\nimport { Container } from '@material-ui/core';\nimport { Card, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport {\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Header from './components/header';\n\nimport Routes from './Routes';\n\nimport backgroundPattern from './images/pattern.webp';\nimport _placeholder from './images/placeholder.png';\nimport placeholder from './images/placeholder.svg';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundImage: `url(${backgroundPattern})`,\n    padding: '3% 0',\n    paddingBottom: '6%'\n  },\n  CardMedia: {\n    // paddingTop: '56.25%', // 16:9\n    objectFit: 'cover',\n    objectPosition: 'center',\n    height: '200px',\n    // width: '200px'\n  },\n  CardContent: {\n    padding: 0\n  },\n  CardActions:{\n    display: 'block',\n    marginTop: '24px'\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const classes = {}//useStyles();\n    this.state = {\n      tab: 0,\n      jsx: (\n        <div className={classes.root}>\n          <LinearProgress />\n        </div>\n      )\n    }\n  }\n  setValueCallback = (value) => {\n    this.setState({\n      tab : value\n    })\n  }\n\n  renderJSX = () => {\n    const { classes } = this.props;\n    this.setState({\n      jsx: (\n        <>\n          <div className={classes.root}>\n            <Container maxWidth=\"lg\" className={classes.Container}>\n              <Card>\n\n                {/* Header Image*/}\n                <LazyLoad once={true} placeholder={placeholder} alt=\"...\"><CardMedia\n                  className={classes.CardMedia}\n                  image={_placeholder}\n                  title=\"\"\n                /></LazyLoad>\n\n                <CardContent className={classes.CardContent}>\n                  {/* Header */}\n                  <Header value={this.state.tab} setValueCallback={this.setValueCallback} />\n\n                  <Routes/>\n\n                </CardContent>\n\n                {/* Footer */}\n                <CardActions align=\"center\" className={classes.CardActions} bg=\"black\">\n                  <h1 style={{ fontFamily: 'Marvel, ui-monospace' }}>\n                    <div style={{ color: \"cyan\", fontFamily: 'Bangers, cursive',letterSpacing: '0.15em', fontSize: '1.2em' }}>\n                    UNDER CONSTRUCTION\n                    </div>\n                    WE ARE STILL THINKING HOW IT SHOULD BE!!! SO IT'S ON THE WAY...\n                  </h1>\n                </CardActions>\n              </Card>\n            \n            </Container>\n          </div>\n        </>\n      )\n    })\n  }\n\n  componentDidMount = () => {    \n    this.renderJSX()\n    return ''\n  }\n\n  render() {\n    return this.state.jsx;\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}