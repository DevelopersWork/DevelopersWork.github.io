{"version":3,"sources":["components/discord/presentation.js","components/discord/container.js","components/discord/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","views/about/presentation.js","views/about/container.js","views/about/index.js"],"names":["Presentation","this","props","classes","src","width","height","allowtransparency","frameborder","sandbox","React","Component","withStyles","theme","root","paper","padding","spacing","textAlign","display","Container","state","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","className","_props$component","component","_props$container","container","_props$direction","direction","_props$item","item","justify","_props$justifyContent","justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","boxSizing","flexWrap","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name"],"mappings":"6LAYMA,E,4JAEF,WACwBC,KAAKC,MAAjBC,QACR,OACI,mCAMgB,wBACIC,IAAI,8DACJC,MAAM,OACNC,OAAO,MACPC,kBAAkB,OAClBC,YAAY,IACZC,QAAQ,sF,GAjBbC,IAAMC,WAwClBC,eAXA,SAAAC,GAAK,MAAK,CACrBC,KAAO,GAGPC,MAAQ,CACJC,QAASH,EAAMI,QAAQ,GACvBC,UAAW,SACXC,QAAS,mBAIFP,CAAmBZ,GCtCnBoB,E,4MAVXC,MAAQ,G,4CAGR,WACI,OACI,cAAC,EAAD,Q,GANYX,IAAMC,WCDfS,O,uDCFf,8CAkBIE,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,MA6B1E,IA6HHK,EAAoBzB,cAAiB,SAAcR,EAAOkC,GAC5D,IAAIC,EAAsBnC,EAAMoC,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBrC,EAAMsC,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDpC,EAAUD,EAAMC,QAChBsC,EAAgBvC,EAAMwC,UACtBC,EAAmBzC,EAAM0C,UACzBjC,OAAiC,IAArBgC,EAA8B,MAAQA,EAClDE,EAAmB3C,EAAM4C,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmB7C,EAAM8C,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAc/C,EAAMgD,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAUjD,EAAMiD,QAChBC,EAAwBlD,EAAMmD,eAC9BA,OAA2C,IAA1BD,EAAmC,aAAeA,EACnEE,EAAYpD,EAAMqD,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYtD,EAAMuD,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYxD,EAAMyD,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiB1D,EAAMe,QACvBA,OAA6B,IAAnB2C,EAA4B,EAAIA,EAC1CC,EAAc3D,EAAM4D,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAY7D,EAAM8D,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAY/D,EAAMgE,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsBjE,EAAMkE,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQC,YAAyBpE,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,iBAAkB,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE5NwC,EAAY6B,YAAKpE,EAAQW,KAAM2B,EAAeK,GAAa,CAAC3C,EAAQ2C,UAAuB,IAAZ7B,GAAiBd,EAAQ,cAAc6B,OAAOC,OAAOhB,MAAaiC,GAAQ/C,EAAQ+C,KAAMkB,GAAgBjE,EAAQiE,aAA4B,QAAdpB,GAAuB7C,EAAQ,gBAAgB6B,OAAOC,OAAOe,KAAuB,SAATc,GAAmB3D,EAAQ,WAAW6B,OAAOC,OAAO6B,KAAwB,YAAftB,GAA4BrC,EAAQ,kBAAkB6B,OAAOC,OAAOO,KAAgC,YAAjBF,GAA8BnC,EAAQ,oBAAoB6B,OAAOC,OAAOK,KAAiD,gBAA/Ba,GAAWE,IAAoClD,EAAQ,sBAAsB6B,OAAOC,OAAOkB,GAAWE,MAA0B,IAAPa,GAAgB/D,EAAQ,WAAW6B,OAAOC,OAAOiC,MAAc,IAAPP,GAAgBxD,EAAQ,WAAW6B,OAAOC,OAAO0B,MAAc,IAAPF,GAAgBtD,EAAQ,WAAW6B,OAAOC,OAAOwB,MAAc,IAAPF,GAAgBpD,EAAQ,WAAW6B,OAAOC,OAAOsB,MAAc,IAAPS,GAAgB7D,EAAQ,WAAW6B,OAAOC,OAAO+B,MACh5B,OAAoBtD,gBAAoBC,EAAW6D,YAAS,CAC1D9B,UAAWA,EACXN,IAAKA,GACJiC,OAsHDI,EAAa7D,aA3RG,SAAgBC,GAClC,OAAO2D,YAAS,CAEd1D,KAAM,GAGNgC,UAAW,CACT4B,UAAW,aACXvD,QAAS,OACTwD,SAAU,OACVtE,MAAO,QAIT6C,KAAM,CACJwB,UAAW,aACXE,OAAQ,KAKVR,aAAc,CACZS,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBH,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBnC,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,4BAA6B,CAC3Be,eAAgB,UAIlB,8BAA+B,CAC7BA,eAAgB,YAIlB,mCAAoC,CAClCA,eAAgB,iBAIlB,kCAAmC,CACjCA,eAAgB,gBAIlB,kCAAmC,CACjCA,eAAgB,iBA/ItB,SAAwBxC,EAAOkE,GAC7B,IAAIC,EAAS,GAgBb,OAfA1D,EAAS2D,SAAQ,SAAUhE,GACzB,IAAIiE,EAAerE,EAAMI,QAAQA,GAEZ,IAAjBiE,IAIJF,EAAO,WAAWhD,OAAO+C,EAAY,KAAK/C,OAAOf,IAAY,CAC3D2D,OAAQ,IAAI5C,OAAOR,EAAU0D,EAAc,IAC3C7E,MAAO,eAAe2B,OAAOR,EAAU0D,GAAe,KACtD,YAAa,CACXlE,QAASQ,EAAU0D,EAAc,SAIhCF,EAgIJG,CAAetE,EAAO,MAAOA,EAAMuE,YAAYC,KAAKC,QAAO,SAAUC,EAAaC,GAGnF,OApMJ,SAAsBC,EAAc5E,EAAOkE,GACzC,IAAIC,EAAS,GACbzD,EAAW0D,SAAQ,SAAUS,GAC3B,IAAIF,EAAM,QAAQxD,OAAO+C,EAAY,KAAK/C,OAAO0D,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIrF,EAAQ,GAAG2B,OAAO2D,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DV,EAAOQ,GAAO,CACZK,UAAWxF,EACXyF,SAAU,EACVC,SAAU1F,QAfV2E,EAAOQ,GAAO,CACZK,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZf,EAAOQ,GAAO,CACZK,UAAW,EACXC,SAAU,EACVC,SAAU,WAyBG,OAAfhB,EACFP,YAASiB,EAAcT,GAEvBS,EAAa5E,EAAMuE,YAAYY,GAAGjB,IAAeC,EA6JjDiB,CAAaV,EAAa1E,EAAO2E,GAC1BD,IACN,OAgK+B,CAClCW,KAAM,WADStF,CAEduB,GAmBYsC,O,qHC3XAzE,E,4JAdX,WACI,OACI,mCACI,cAACmC,EAAA,EAAD,CAAMW,WAAS,EAAC7B,QAAS,EAAzB,SAII,cAAC,IAAD,Y,GAROP,IAAMC,WCQlBS,E,4JATX,WACI,OACI,mCACI,cAAC,EAAD,U,GAJQV,IAAMC,WCDfS","file":"static/js/6.caf722d2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\nimport {Container} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nclass Presentation extends React.Component{\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <>\r\n                {/* <Paper xs = {12} className={classes.paper}> */}\r\n                {/* <Grid item lg=\"7\"> */}\r\n                    {/* <Container maxWidth=\"lg\" className={classes.root}> */}\r\n                        {/* <Grid container spacing={3}> */}\r\n\r\n                            <iframe \r\n                                src=\"https://discord.com/widget?id=346204799756271617&theme=dark\" \r\n                                width=\"100%\" \r\n                                height=\"800\"\r\n                                allowtransparency=\"true\" \r\n                                frameborder=\"0\" \r\n                                sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"\r\n                            >    \r\n                            </iframe>\r\n                        {/* </Grid> */}\r\n                    {/* </Container> */}\r\n                {/* </Grid> */}\r\n                {/* </Paper>  */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root : {\r\n        // padding:'5% 2%'\r\n    },\r\n    paper : {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        display: \"inline-block\",\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Presentation);","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    state = {\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Presentation/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import Container from './container'\r\n\r\nexport default Container","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: deprecatedPropType(PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Discord from '../../components/discord'\r\n\r\nclass Presentation extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <Grid container spacing={3}>\r\n                    {/* <Schedule/> */}\r\n                    {/* <Schedule/> */}\r\n                    {/* <TwitterTweets/> */}\r\n                    <Discord/>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Presentation;","import React from 'react'\r\nimport Presentation from './presentation'\r\n\r\nclass Container extends React.Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Presentation/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import Container from './container'\r\n\r\nexport default Container"],"sourceRoot":""}